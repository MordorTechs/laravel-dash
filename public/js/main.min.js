document.addEventListener('DOMContentLoaded', function () {
 

    // Código de ScrollReveal
    if (document.body.classList.contains("has-animations")) {
        (window.sr = ScrollReveal()).reveal(".hero-title, .hero-paragraph, .hero-form", {
            duration: 1000,
            distance: "40px",
            easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
            origin: "bottom",
            interval: 150
        });
    }

    // Código para parallax
    const elements = document.querySelectorAll(".is-moving-object");
    if (elements.length > 0) {
        window.addEventListener("mousemove", throttle(function (event) {
            let x = event.pageX;
            let y = event.pageY;
            let scrollY = window.scrollY;
            let width = document.documentElement.clientWidth;
            let height = document.documentElement.clientHeight;
            let offsetX = width / 2 - x;
            let offsetY = height / 2 - (y - scrollY);

            elements.forEach(function (element) {
                let translateFactor = element.getAttribute("data-translating-factor") || 20;
                let rotateFactor = element.getAttribute("data-rotating-factor") || 20;
                let perspective = element.getAttribute("data-perspective") || 500;

                let transform = [];
                if (element.classList.contains("is-translating")) {
                    transform.push(`translate(${offsetX / translateFactor}px, ${offsetY / translateFactor}px)`);
                }
                if (element.classList.contains("is-rotating")) {
                    transform.push(`perspective(${perspective}px) rotateY(${-offsetX / rotateFactor}deg) rotateX(${offsetY / rotateFactor}deg)`);
                }
                if (transform.length > 0) {
                    element.style.transform = transform.join(" ");
                    element.style.transition = "transform 1s ease-out";
                    element.style.transformStyle = "preserve-3d";
                    element.style.backfaceVisibility = "hidden";
                }
            });
        }, 150));
    }

    function throttle(func, delay) {
        let lastCall = 0;
        return function (...args) {
            let now = Date.now();
            if (now - lastCall >= delay) {
                lastCall = now;
                func(...args);
            }
        };
    }
});